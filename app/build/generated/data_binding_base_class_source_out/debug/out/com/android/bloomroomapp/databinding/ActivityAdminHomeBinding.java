// Generated by view binder compiler. Do not edit!
package com.android.bloomroomapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.bloomroomapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminHomeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout logoutBtn;

  @NonNull
  public final RelativeLayout newCategoryLayout;

  @NonNull
  public final RelativeLayout newOfferLayout;

  @NonNull
  public final RelativeLayout newProductLayout;

  @NonNull
  public final ProgressBar orderCountProgress;

  @NonNull
  public final TextView ordersCount;

  @NonNull
  public final TextView topTextView;

  @NonNull
  public final RelativeLayout viewAllFeedback;

  @NonNull
  public final RelativeLayout viewAllProducts;

  @NonNull
  public final RelativeLayout viewCustomerOrder;

  @NonNull
  public final RelativeLayout viewMonthlyReports;

  private ActivityAdminHomeBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout logoutBtn, @NonNull RelativeLayout newCategoryLayout,
      @NonNull RelativeLayout newOfferLayout, @NonNull RelativeLayout newProductLayout,
      @NonNull ProgressBar orderCountProgress, @NonNull TextView ordersCount,
      @NonNull TextView topTextView, @NonNull RelativeLayout viewAllFeedback,
      @NonNull RelativeLayout viewAllProducts, @NonNull RelativeLayout viewCustomerOrder,
      @NonNull RelativeLayout viewMonthlyReports) {
    this.rootView = rootView;
    this.logoutBtn = logoutBtn;
    this.newCategoryLayout = newCategoryLayout;
    this.newOfferLayout = newOfferLayout;
    this.newProductLayout = newProductLayout;
    this.orderCountProgress = orderCountProgress;
    this.ordersCount = ordersCount;
    this.topTextView = topTextView;
    this.viewAllFeedback = viewAllFeedback;
    this.viewAllProducts = viewAllProducts;
    this.viewCustomerOrder = viewCustomerOrder;
    this.viewMonthlyReports = viewMonthlyReports;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.logout_btn;
      RelativeLayout logoutBtn = ViewBindings.findChildViewById(rootView, id);
      if (logoutBtn == null) {
        break missingId;
      }

      id = R.id.new_category_layout;
      RelativeLayout newCategoryLayout = ViewBindings.findChildViewById(rootView, id);
      if (newCategoryLayout == null) {
        break missingId;
      }

      id = R.id.new_offer_layout;
      RelativeLayout newOfferLayout = ViewBindings.findChildViewById(rootView, id);
      if (newOfferLayout == null) {
        break missingId;
      }

      id = R.id.new_product_layout;
      RelativeLayout newProductLayout = ViewBindings.findChildViewById(rootView, id);
      if (newProductLayout == null) {
        break missingId;
      }

      id = R.id.order_count_progress;
      ProgressBar orderCountProgress = ViewBindings.findChildViewById(rootView, id);
      if (orderCountProgress == null) {
        break missingId;
      }

      id = R.id.orders_count;
      TextView ordersCount = ViewBindings.findChildViewById(rootView, id);
      if (ordersCount == null) {
        break missingId;
      }

      id = R.id.top_text_view;
      TextView topTextView = ViewBindings.findChildViewById(rootView, id);
      if (topTextView == null) {
        break missingId;
      }

      id = R.id.view_all_feedback;
      RelativeLayout viewAllFeedback = ViewBindings.findChildViewById(rootView, id);
      if (viewAllFeedback == null) {
        break missingId;
      }

      id = R.id.view_all_products;
      RelativeLayout viewAllProducts = ViewBindings.findChildViewById(rootView, id);
      if (viewAllProducts == null) {
        break missingId;
      }

      id = R.id.view_customer_order;
      RelativeLayout viewCustomerOrder = ViewBindings.findChildViewById(rootView, id);
      if (viewCustomerOrder == null) {
        break missingId;
      }

      id = R.id.view_monthly_reports;
      RelativeLayout viewMonthlyReports = ViewBindings.findChildViewById(rootView, id);
      if (viewMonthlyReports == null) {
        break missingId;
      }

      return new ActivityAdminHomeBinding((RelativeLayout) rootView, logoutBtn, newCategoryLayout,
          newOfferLayout, newProductLayout, orderCountProgress, ordersCount, topTextView,
          viewAllFeedback, viewAllProducts, viewCustomerOrder, viewMonthlyReports);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
