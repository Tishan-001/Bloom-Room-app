// Generated by view binder compiler. Do not edit!
package com.android.bloomroomapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.bloomroomapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemSingleFeedbackBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView dateOfOrder;

  @NonNull
  public final TextView feedbackStatus;

  @NonNull
  public final TextView feedbackTv;

  @NonNull
  public final RelativeLayout l1;

  @NonNull
  public final LinearLayout layout;

  @NonNull
  public final CardView parent;

  private ItemSingleFeedbackBinding(@NonNull CardView rootView, @NonNull TextView dateOfOrder,
      @NonNull TextView feedbackStatus, @NonNull TextView feedbackTv, @NonNull RelativeLayout l1,
      @NonNull LinearLayout layout, @NonNull CardView parent) {
    this.rootView = rootView;
    this.dateOfOrder = dateOfOrder;
    this.feedbackStatus = feedbackStatus;
    this.feedbackTv = feedbackTv;
    this.l1 = l1;
    this.layout = layout;
    this.parent = parent;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemSingleFeedbackBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemSingleFeedbackBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_single_feedback, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemSingleFeedbackBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.date_of_order;
      TextView dateOfOrder = ViewBindings.findChildViewById(rootView, id);
      if (dateOfOrder == null) {
        break missingId;
      }

      id = R.id.feedback_status;
      TextView feedbackStatus = ViewBindings.findChildViewById(rootView, id);
      if (feedbackStatus == null) {
        break missingId;
      }

      id = R.id.feedback_tv;
      TextView feedbackTv = ViewBindings.findChildViewById(rootView, id);
      if (feedbackTv == null) {
        break missingId;
      }

      id = R.id.l1;
      RelativeLayout l1 = ViewBindings.findChildViewById(rootView, id);
      if (l1 == null) {
        break missingId;
      }

      id = R.id.layout;
      LinearLayout layout = ViewBindings.findChildViewById(rootView, id);
      if (layout == null) {
        break missingId;
      }

      CardView parent = (CardView) rootView;

      return new ItemSingleFeedbackBinding((CardView) rootView, dateOfOrder, feedbackStatus,
          feedbackTv, l1, layout, parent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
