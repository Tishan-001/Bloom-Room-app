// Generated by view binder compiler. Do not edit!
package com.android.bloomroomapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.bloomroomapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView card2;

  @NonNull
  public final ImageView filtersBtn;

  @NonNull
  public final CardView filtersCard;

  @NonNull
  public final EditText nameInput;

  @NonNull
  public final TextView noProduct;

  @NonNull
  public final RecyclerView productList;

  @NonNull
  public final ProgressBar spinProgressBar;

  private FragmentHomeBinding(@NonNull RelativeLayout rootView, @NonNull CardView card2,
      @NonNull ImageView filtersBtn, @NonNull CardView filtersCard, @NonNull EditText nameInput,
      @NonNull TextView noProduct, @NonNull RecyclerView productList,
      @NonNull ProgressBar spinProgressBar) {
    this.rootView = rootView;
    this.card2 = card2;
    this.filtersBtn = filtersBtn;
    this.filtersCard = filtersCard;
    this.nameInput = nameInput;
    this.noProduct = noProduct;
    this.productList = productList;
    this.spinProgressBar = spinProgressBar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card2;
      CardView card2 = ViewBindings.findChildViewById(rootView, id);
      if (card2 == null) {
        break missingId;
      }

      id = R.id.filters_btn;
      ImageView filtersBtn = ViewBindings.findChildViewById(rootView, id);
      if (filtersBtn == null) {
        break missingId;
      }

      id = R.id.filters_card;
      CardView filtersCard = ViewBindings.findChildViewById(rootView, id);
      if (filtersCard == null) {
        break missingId;
      }

      id = R.id.name_input;
      EditText nameInput = ViewBindings.findChildViewById(rootView, id);
      if (nameInput == null) {
        break missingId;
      }

      id = R.id.no_product;
      TextView noProduct = ViewBindings.findChildViewById(rootView, id);
      if (noProduct == null) {
        break missingId;
      }

      id = R.id.product_list;
      RecyclerView productList = ViewBindings.findChildViewById(rootView, id);
      if (productList == null) {
        break missingId;
      }

      id = R.id.spin_progress_bar;
      ProgressBar spinProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (spinProgressBar == null) {
        break missingId;
      }

      return new FragmentHomeBinding((RelativeLayout) rootView, card2, filtersBtn, filtersCard,
          nameInput, noProduct, productList, spinProgressBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
