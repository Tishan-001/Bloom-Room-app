// Generated by view binder compiler. Do not edit!
package com.android.bloomroomapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.bloomroomapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFeedbacksBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView addNewFeedback;

  @NonNull
  public final ImageView cartBackArrow;

  @NonNull
  public final RecyclerView cartRecyclerview;

  @NonNull
  public final TextView noProduct;

  @NonNull
  public final ProgressBar spinProgressBar;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final RelativeLayout toolbar;

  private ActivityFeedbacksBinding(@NonNull RelativeLayout rootView,
      @NonNull CardView addNewFeedback, @NonNull ImageView cartBackArrow,
      @NonNull RecyclerView cartRecyclerview, @NonNull TextView noProduct,
      @NonNull ProgressBar spinProgressBar, @NonNull TextView textView4,
      @NonNull RelativeLayout toolbar) {
    this.rootView = rootView;
    this.addNewFeedback = addNewFeedback;
    this.cartBackArrow = cartBackArrow;
    this.cartRecyclerview = cartRecyclerview;
    this.noProduct = noProduct;
    this.spinProgressBar = spinProgressBar;
    this.textView4 = textView4;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFeedbacksBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFeedbacksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_feedbacks, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFeedbacksBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_new_feedback;
      CardView addNewFeedback = ViewBindings.findChildViewById(rootView, id);
      if (addNewFeedback == null) {
        break missingId;
      }

      id = R.id.cart_back_arrow;
      ImageView cartBackArrow = ViewBindings.findChildViewById(rootView, id);
      if (cartBackArrow == null) {
        break missingId;
      }

      id = R.id.cart_recyclerview;
      RecyclerView cartRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (cartRecyclerview == null) {
        break missingId;
      }

      id = R.id.no_product;
      TextView noProduct = ViewBindings.findChildViewById(rootView, id);
      if (noProduct == null) {
        break missingId;
      }

      id = R.id.spin_progress_bar;
      ProgressBar spinProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (spinProgressBar == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.toolbar;
      RelativeLayout toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityFeedbacksBinding((RelativeLayout) rootView, addNewFeedback, cartBackArrow,
          cartRecyclerview, noProduct, spinProgressBar, textView4, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
