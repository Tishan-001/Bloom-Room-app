// Generated by view binder compiler. Do not edit!
package com.android.bloomroomapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.bloomroomapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SingleProductLayoutBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView categoryImage;

  @NonNull
  public final ImageView deleteBtn;

  @NonNull
  public final ImageView editBtn;

  @NonNull
  public final LinearLayout layout;

  @NonNull
  public final TextView priceTv;

  @NonNull
  public final TextView productBrandName;

  private SingleProductLayoutBinding(@NonNull CardView rootView, @NonNull ImageView categoryImage,
      @NonNull ImageView deleteBtn, @NonNull ImageView editBtn, @NonNull LinearLayout layout,
      @NonNull TextView priceTv, @NonNull TextView productBrandName) {
    this.rootView = rootView;
    this.categoryImage = categoryImage;
    this.deleteBtn = deleteBtn;
    this.editBtn = editBtn;
    this.layout = layout;
    this.priceTv = priceTv;
    this.productBrandName = productBrandName;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static SingleProductLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SingleProductLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.single_product_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SingleProductLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.category_image;
      ImageView categoryImage = ViewBindings.findChildViewById(rootView, id);
      if (categoryImage == null) {
        break missingId;
      }

      id = R.id.delete_btn;
      ImageView deleteBtn = ViewBindings.findChildViewById(rootView, id);
      if (deleteBtn == null) {
        break missingId;
      }

      id = R.id.edit_btn;
      ImageView editBtn = ViewBindings.findChildViewById(rootView, id);
      if (editBtn == null) {
        break missingId;
      }

      id = R.id.layout;
      LinearLayout layout = ViewBindings.findChildViewById(rootView, id);
      if (layout == null) {
        break missingId;
      }

      id = R.id.price_tv;
      TextView priceTv = ViewBindings.findChildViewById(rootView, id);
      if (priceTv == null) {
        break missingId;
      }

      id = R.id.product_brand_name;
      TextView productBrandName = ViewBindings.findChildViewById(rootView, id);
      if (productBrandName == null) {
        break missingId;
      }

      return new SingleProductLayoutBinding((CardView) rootView, categoryImage, deleteBtn, editBtn,
          layout, priceTv, productBrandName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
